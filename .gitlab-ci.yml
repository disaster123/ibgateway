#
# 	Function Library (c)2019 - Version 0.0.1
#
#	This template is free: you can redistribute it and/or modify
#	it under the terms of the GNU General Public License as published by
#	the Free Software Foundation, either version 3 of the License, or
#	(at your option) any later version.
#
#	This template is distributed in the hope that it will be useful,
#	but WITHOUT ANY WARRANTY; without even the implied warranty of
#	MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
#	GNU General Public License for more details.
#
#		 Autor: Garcia Vazquez, Manuel Andres - DevOps
#		Correo: mvazquez@scabb-island.com.ar
#		   Web: www.scabb-island.com.ar
#		  Repo: https://github.com/mgvazquez/ibgateway
#		Issues: https://github.com/mgvazquez/ibgateway/issues
#
#		  Nota: <NOTA>
#

######### Variables ###########

# Variable Usage & Precedence:
#
# - CI_REGISTRY_PASSWORD: Token de la registry a donde se subira la imagen
# - CI_REGISTRY_USER: Usuario de la registry a donde se subira la imagen
# - IMAGE_NAME: Nombre de la imagen, en caso de no setearse, se utilizara el namespace del proyecto
# - GOOGLE_APPLICATION_CREDENTIALS: Decalre esta variable en la UI de Gitlab en formato File para habilitar el push a GCR

variables:
#  CI_DEBUG_TRACE: "true"
  CI_BUILD_IMAGE: "mgvazquez/docker-build-image:19.03.12"
  IMAGE_NAME: "${CI_PROJECT_PATH}"
  DOCKER_REGISTRY_SNAPSHOTS: "registry.gitlab.com"
  DOCKER_REGISTRY_RELEASES: "registry.gitlab.com"
  DOCKER_REGISTRY_GCLOUD: gcr.io

###############################

########## Templates ##########
.bannerBuilding: &bannerBuilding |
  echo "Building ${BUILD_TYPE} [${CI_COMMIT_REF_NAME}]"

.checkRegistry: &checkRegistry |
  if [[ ("x${CI_REGISTRY_USER}" != "x") && ("x${CI_REGISTRY_PASSWORD}" != "x") && ("x${GOOGLE_APPLICATION_CREDENTIALS}" == "x") ]]; then
    echo "${CI_REGISTRY_PASSWORD}" | docker login -u "${CI_REGISTRY_USER}" --password-stdin "${DOCKER_REGISTRY}";
  fi

.runVersionCheck: &runTagCheck |
  export DOCKER_IMAGE_NAME="${DOCKER_REGISTRY}/${IMAGE_NAME}"
  export DOCKER_IMAGE_TAG="${CI_COMMIT_TAG:-${CI_COMMIT_REF_NAME}}";

.runMakePackage: &runMakePackage |
  export DOCKER_HOST="${DOCKER_PORT}"
  docker build \
      --ulimit nofile=1024:1024 \
      --build-arg BUILD_DATE="$(date --utc '+%Y-%m-%d %H:%M:%S UTC')" \
      --build-arg BUILD_VCS_REF="${CI_COMMIT_SHA}" \
      --build-arg BUILD_VERSION="${DOCKER_IMAGE_TAG}" \
      --build-arg BUILD_PROJECT_URL="${CI_PROJECT_URL}" \
      --build-arg BUILD_COMMITER_NAME="${GITLAB_USER_NAME}" \
      --build-arg BUILD_COMMITER_MAIL="${GITLAB_USER_EMAIL}" \
      -t ${DOCKER_IMAGE_NAME}:${DOCKER_IMAGE_TAG} \
      .;

.publishPackage: &publishPackage |
  docker push ${DOCKER_IMAGE_NAME};
###############################

############ Tasks ############
########## Defaults ###########
default:
  image:
    name: ${CI_BUILD_IMAGE}
    entrypoint: [""]
  services:
    - name: docker:19.03.12-dind
      alias: dind
  before_script:
    - git remote set-url origin git@${CI_SERVER_HOST}:${CI_PROJECT_PATH}.git
    - git checkout ${CI_COMMIT_REF_NAME}
    - *checkRegistry

# NOTE: implementar estos stages ~> https://docs.gitlab.com/ee/ci/yaml/README.html#pre-and-post
stages:
  - .pre
  - build
  - .post
###############################

###### BUILD-* #####
generate_build:
  stage: build
  variables:
    DOCKER_REGISTRY: "${DOCKER_REGISTRY_SNAPSHOTS}"
  script:
    - *bannerBuilding
    - *runTagCheck
    - *runMakePackage
    - *publishPackage
  allow_failure: false
  except:
    refs:
      - triggers
    variables:
      - $CI_COMMIT_REF_NAME =~ /^development$/
      - $CI_COMMIT_REF_NAME =~ /^master$/
####################

##### Snapshot #####
generate_snapshot:
  stage: build
  variables:
    DOCKER_REGISTRY: "${DOCKER_REGISTRY_SNAPSHOTS}"
  script:
    - *bannerBuilding
    - *runTagCheck
    - *runMakePackage
    - *publishPackage
  allow_failure: false
  only:
    variables:
      - $CI_COMMIT_REF_NAME =~ /^development$/
  except:
    refs:
      - triggers
####################

###### Release #####
generate_release:
  stage: build
  variables:
    DOCKER_REGISTRY: "${DOCKER_REGISTRY_RELEASES}"
  script:
    - *bannerBuilding
    - *runTagCheck
    - *runMakePackage
    - *publishPackage
  allow_failure: false
  only:
    variables:
      - $CI_COMMIT_REF_NAME =~ /^master/
      - $CI_COMMIT_TAG != null
  except:
    refs:
      - triggers
####################

###############################
